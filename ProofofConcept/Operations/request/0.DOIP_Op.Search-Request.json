{
  "$schema": "http://json-schema.org/draft/2020-12/schema#",
  "type": "object",
  "properties": {
    "sessionId": {
      "type": "string",
      "description": "sessionId: te identifier of the respective sessions for each client."
    },
    "requestId": {
      "type": "string",
      "description": "requestId: the identifier of the request provided by the client; shall be unique within a given DOIP session so clients can distinguish between DOIP service responses. The requestId shall be a string not exceeding 4096 bits."
    },
    "clientId": {
      "type": "string",
      "description": "clientId: the identifier of the client."
    },
    "targetId": {
      "type": "string",
      "description": "targetId: the identifier of the DO on which the operation is to be invoked; the DOIP service could itself be the target."
    },
    "operationId": {
      "type": "string",
      "const": "0.DOIP/Op.Search",
      "description": "operationId: the identifier of the operation to be performed."
    },
    "authentication": {
      "type": "object",
      "anyOf": [
        {
          "properties": {
            "username": {
              "type": "string"
            },
            "password": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": ["username", "password"]
        },
        {
          "properties": {
            "token": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": ["token"]
        },
        {
          "properties": {
            "key": {
              "type": "string"
            }
          },
          "additionalProperties": false,
          "required": ["key"]
        }
      ],
      "description": "authentication: optional JSON object used by clients to authenticate."
    },
    "attributes": {
      "type": "object",
      "properties": {
        "query": {
          "type": "string",
          "description": "the search query to be performed, in a textual representation"
        },
        "pageNum": {
          "type": "integer",
          "minimum": 0,
          "description": "the page number to be returned, starting with 0"
        },
        "pageSize": {
          "type": "integer",
          "description": "the page size to be returned; if missing or negative, all results will be returned; if zero, no results are returned, but the 'size' is still returned"
        },
        "sortFields": {
          "type": "string",
          "description": "a comma-separated list of sort specifications, each of which is a field name optionally followed by ASC or DESC"
        },
        "type": {
          "enum": [
            "id",
            "full"
          ],
          "type": "string",
          "default": "full",
          "description": "either 'id', to return just object ids, or 'full', to return full object data (omitting element data); defaults to 'full'"
        }
      },
      "required": [
        "query"
      ],
      "description": "attributes: optional array of JSON properties; operation stipulated.",
      "additionalProperties": false
    }
  },
  "required": [
    "targetId",
    "operationId",
    "attributes"
  ],
  "additionalProperties": false,
  "description": "An operation to discover digital objects by searching metadata contained in the set of digital objects managed by the DOIP service."
}
